{"ast":null,"code":"var _jsxFileName = \"/Users/mwitmacmini2/Desktop/WebOpenAi/frontend/src/component/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Input, Button } from 'antd';\nimport { PlayCircleFilled } from '@ant-design/icons';\n\n// import axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\nconst {\n  TextArea\n} = Input;\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst mic = new SpeechRecognition();\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = 'th-Th';\nconst configuration = new Configuration({\n  apiKey: \"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\"\n});\nconst openai = new OpenAIApi(configuration);\nconst Header = () => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [note, setNote] = useState('');\n  const [text, setText] = useState('');\n  useEffect(() => {\n    handleListen();\n  }, [isListening]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      id: \"inputText\",\n      onChange: async e => {\n        var _response$data$choice;\n        setText(e.target.value);\n        console.log(e);\n        const question = e.target.value;\n        const response = await openai.createCompletion({\n          model: \"text-davinci-003\",\n          prompt: `q: ${question}\\n a: `,\n          temperature: 0,\n          max_tokens: 100,\n          top_p: 1,\n          frequency_penalty: 0.0,\n          presence_penalty: 0.0,\n          stop: [\"\\n\"]\n        });\n        setNote((_response$data$choice = response.data.choices) === null || _response$data$choice === void 0 ? void 0 : _response$data$choice[0].text);\n      },\n      placeholder: \"text\",\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n      id: \"outputText\",\n      placeholder: \"Password\",\n      value: note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), isListening ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(PlayCircleFilled, {\n        color: \"action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 35\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(PlayCircleFilled, {\n        style: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayCircleFilled, {\n        color: \"action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 81\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setIsListening(prevState => !prevState),\n      children: \"Start/Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Header, \"+s/3aWrYAHzDZL6itZz21rPQs7E=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","Input","Button","PlayCircleFilled","jsxDEV","_jsxDEV","Fragment","_Fragment","Configuration","OpenAIApi","require","TextArea","SpeechRecognition","window","webkitSpeechRecognition","mic","continuous","interimResults","lang","configuration","apiKey","openai","Header","_s","isListening","setIsListening","note","setNote","text","setText","handleListen","children","type","id","onChange","e","_response$data$choice","target","value","console","log","question","response","createCompletion","model","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","stop","data","choices","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","color","style","variant","onClick","prevState","_c","$RefreshReg$"],"sources":["/Users/mwitmacmini2/Desktop/WebOpenAi/frontend/src/component/Header.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nimport { Input, Button } from 'antd'\nimport {\n    PlayCircleFilled\n} from '@ant-design/icons'\n\n// import axios from 'axios';\nconst { Configuration, OpenAIApi } = require(\"openai\")\n\nconst { TextArea } = Input;\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nconst mic = new SpeechRecognition()\n\nmic.continuous = true\nmic.interimResults = true\nmic.lang = 'th-Th'\n\nconst configuration = new Configuration({\n    apiKey: \"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\",\n});\nconst openai = new OpenAIApi(configuration);\n\nconst Header = () => {\n    const [isListening, setIsListening] = useState(false)\n    const [note, setNote] = useState('')\n    const [text, setText] = useState('')\n\n    useEffect(() => {\n        handleListen();\n    }, [isListening])\n\n    return (\n        <>\n            <Input type=\"text\" id=\"inputText\" onChange={async e => {\n                setText(e.target.value)\n                console.log(e);\n                const question = e.target.value\n                const response = await openai.createCompletion({\n                    model: \"text-davinci-003\",\n                    prompt: `q: ${question}\\n a: `,\n                    temperature: 0,\n                    max_tokens: 100,\n                    top_p: 1,\n                    frequency_penalty: 0.0,\n                    presence_penalty: 0.0,\n                    stop: [\"\\n\"],\n                })\n                setNote(response.data.choices?.[0].text)\n            }} placeholder=\"text\" value={text} />\n            <br /><br />\n            <TextArea id=\"outputText\" placeholder=\"Password\" value={note} />\n\n            {isListening ? <span> <PlayCircleFilled color='action' /> </span> : <span>\n                <PlayCircleFilled style={{ color: 'red' }} />\n                <PlayCircleFilled color=\"action\" />\n            </span>}\n            <br />\n\n            <Button variant='contained' color='primary'\n                onClick={() => setIsListening(prevState => !prevState)}\n            >\n                Start/Stop\n            </Button>\n\n        </>\n    )\n}\n\nexport default Header"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}