{"ast":null,"code":"var _jsxFileName = \"/Users/mwitmacmini2/Desktop/WebOpenAi/frontend/src/component/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Input } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst mic = new SpeechRecognition();\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = 'th-Th';\nconst Header = () => {\n  _s();\n  const [text, setText] = useState('');\n  mic.start();\n  mic.onresult = e => {\n    const transcript = Array.from(e.results).map(res => res[0]).map(res => res.transcript).join('');\n    setText(transcript);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      id: \"inputText\",\n      onChange: e => setText(e.target.value),\n      placeholder: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n      id: \"outputText\",\n      placeholder: \"Password\",\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Header, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","Input","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TextArea","SpeechRecognition","window","webkitSpeechRecognition","mic","continuous","interimResults","lang","Header","_s","text","setText","start","onresult","e","transcript","Array","from","results","map","res","join","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","target","value","placeholder","_c","$RefreshReg$"],"sources":["/Users/mwitmacmini2/Desktop/WebOpenAi/frontend/src/component/Header.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Input } from 'antd';\nimport axios from 'axios';\n\nconst { TextArea } = Input;\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nconst mic = new SpeechRecognition()\n\nmic.continuous = true\nmic.interimResults = true\nmic.lang = 'th-Th'\n\n\n\nconst Header = () => {\n    const [text, setText] = useState('')\n    mic.start()\n    mic.onresult = e => {\n        const transcript = Array.from(e.results)\n            .map(res => res[0])\n            .map(res => res.transcript)\n            .join('')\n        setText(transcript)\n    }\n    return (\n        <>\n            <br /><br />\n            <div />\n            <Input type=\"text\" id=\"inputText\" onChange={e => setText(e.target.value)} placeholder=\"text\" />\n            <br /><br />\n            <TextArea id=\"outputText\" placeholder=\"Password\" value={text} />\n        </>\n    )\n}\n\nexport default Header"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,MAAM;AAC5B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAM;EAAEC;AAAS,CAAC,GAAGN,KAAK;AAC1B,MAAMO,iBAAiB,GAAGC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;AACpF,MAAMC,GAAG,GAAG,IAAIH,iBAAiB,CAAC,CAAC;AAEnCG,GAAG,CAACC,UAAU,GAAG,IAAI;AACrBD,GAAG,CAACE,cAAc,GAAG,IAAI;AACzBF,GAAG,CAACG,IAAI,GAAG,OAAO;AAIlB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpCW,GAAG,CAACQ,KAAK,CAAC,CAAC;EACXR,GAAG,CAACS,QAAQ,GAAGC,CAAC,IAAI;IAChB,MAAMC,UAAU,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACI,OAAO,CAAC,CACnCC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,CAAC,CAClBD,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACL,UAAU,CAAC,CAC1BM,IAAI,CAAC,EAAE,CAAC;IACbV,OAAO,CAACI,UAAU,CAAC;EACvB,CAAC;EACD,oBACIlB,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACIzB,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAAA7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACZ7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACP7B,OAAA,CAACH,KAAK;MAACiC,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,WAAW;MAACC,QAAQ,EAAEf,CAAC,IAAIH,OAAO,CAACG,CAAC,CAACgB,MAAM,CAACC,KAAK,CAAE;MAACC,WAAW,EAAC;IAAM;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/F7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAAA7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACZ7B,OAAA,CAACG,QAAQ;MAAC4B,EAAE,EAAC,YAAY;MAACI,WAAW,EAAC,UAAU;MAACD,KAAK,EAAErB;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAClE,CAAC;AAEX,CAAC;AAAAjB,EAAA,CAnBKD,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AAqBZ,eAAeA,MAAM;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}