{"ast":null,"code":"var _jsxFileName = \"/Users/mwitmacmini2/Desktop/WebOpenAi/frontend/src/component/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Input } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\nconst {\n  TextArea\n} = Input;\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst mic = new SpeechRecognition();\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = 'th-Th';\nconst configuration = new Configuration({\n  apiKey: \"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\"\n});\nconst openai = new OpenAIApi(configuration);\nconst Header = () => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  // const [ip, setIp] = useState('')\n  const [text, setText] = useState(null);\n  useEffect(() => {\n    handleListen();\n  }, [isListening]);\n  mic.start();\n  mic.onresult = e => {\n    console.log(e);\n    const transcript = Array.from(e.results).map(res => res[0]).map(res => res.transcript).join('');\n    setIp(transcript);\n  };\n  mic.stop();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      id: \"inputText\",\n      onChange: async e => {\n        var _response$data$choice;\n        // setText(e.target.value)\n        const question = e.target.value;\n        const response = await openai.createCompletion({\n          model: \"text-davinci-003\",\n          prompt: `q: ${question}\\n a: `,\n          temperature: 0,\n          max_tokens: 100,\n          top_p: 1,\n          frequency_penalty: 0.0,\n          presence_penalty: 0.0,\n          stop: [\"\\n\"]\n        });\n        setText((_response$data$choice = response.data.choices) === null || _response$data$choice === void 0 ? void 0 : _response$data$choice[0].text);\n      },\n      placeholder: \"text\",\n      value: ip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n      id: \"outputText\",\n      placeholder: \"Password\",\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Header, \"w5H9YNPV+/tpP3DRcDO6FbiS6JE=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","Input","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Configuration","OpenAIApi","require","TextArea","SpeechRecognition","window","webkitSpeechRecognition","mic","continuous","interimResults","lang","configuration","apiKey","openai","Header","_s","isListening","setIsListening","text","setText","handleListen","start","onresult","e","console","log","transcript","Array","from","results","map","res","join","setIp","stop","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","_response$data$choice","question","target","value","response","createCompletion","model","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","data","choices","placeholder","ip","_c","$RefreshReg$"],"sources":["/Users/mwitmacmini2/Desktop/WebOpenAi/frontend/src/component/Header.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Input } from 'antd';\nimport axios from 'axios';\nconst { Configuration, OpenAIApi } = require(\"openai\")\n\nconst { TextArea } = Input;\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nconst mic = new SpeechRecognition()\n\nmic.continuous = true\nmic.interimResults = true\nmic.lang = 'th-Th'\n\nconst configuration = new Configuration({\n    apiKey: \"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\",\n});\nconst openai = new OpenAIApi(configuration);\n\nconst Header = () => {\n    const [isListening, setIsListening] = useState(false)\n    // const [ip, setIp] = useState('')\n    const [text, setText] = useState(null)\n\n    useEffect(() => {\n        handleListen();\n    }, [isListening])\n\n\n    mic.start()\n    mic.onresult = e => {\n        console.log(e)\n        const transcript = Array.from(e.results)\n            .map(res => res[0])\n            .map(res => res.transcript)\n            .join('')\n        setIp(transcript)\n    }\n    mic.stop()\n\n    return (\n        <>\n            <br /><br />\n            <div />\n            <Input type=\"text\" id=\"inputText\" onChange={async e => {\n                // setText(e.target.value)\n                const question = e.target.value\n                const response = await openai.createCompletion({\n                    model: \"text-davinci-003\",\n                    prompt: `q: ${question}\\n a: `,\n                    temperature: 0,\n                    max_tokens: 100,\n                    top_p: 1,\n                    frequency_penalty: 0.0,\n                    presence_penalty: 0.0,\n                    stop: [\"\\n\"],\n                })\n                setText(response.data.choices?.[0].text)\n            }} placeholder=\"text\" value={ip} />\n            <br /><br />\n            <TextArea id=\"outputText\" placeholder=\"Password\" value={text} />\n        </>\n    )\n}\n\nexport default Header"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}