{"ast":null,"code":"var _jsxFileName = \"/Users/mwitmacmini2/Desktop/WebOpenAi/frontend/src/component/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Configuration,\n  OpenAIApi\n} = require(\"openai\");\nconst {\n  TextArea\n} = Input;\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst mic = new SpeechRecognition();\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = 'th-Th';\nconst configuration = new Configuration({\n  apiKey: \"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\"\n});\nconst openai = new OpenAIApi(configuration);\nconst Header = () => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [note, setNote] = useState('');\n  const [text, setText] = useState('');\n\n  // useEffect(() => {\n  //     mic.onstart = () => {\n  //         console.log('Speech recognition started');\n  //     };\n\n  //     mic.onresult = event => {\n  //         const transcript = Array.from(event.results)\n  //             .map(result => result[0])\n  //             .map(result => result.transcript)\n  //             .join('');\n\n  //         setText(transcript);\n  //     };\n\n  //     mic.onerror = event => {\n  //         console.error('Speech recognition error:', event.error);\n  //     };\n  // }, []);\n\n  const startListening = () => {\n    setIsListening(true);\n    mic.start();\n  };\n  const stopListening = () => {\n    setIsListening(false);\n    mic.stop();\n  };\n  const handleInputChange = async e => {\n    var _response$data$choice;\n    setText(e.target.value);\n    const question = e.target.value;\n    const response = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: `q: ${question}\\n a: `,\n      temperature: 0,\n      max_tokens: 100,\n      top_p: 1,\n      frequency_penalty: 0.0,\n      presence_penalty: 0.0,\n      stop: [\"\\n\"]\n    });\n    setNote((_response$data$choice = response.data.choices) === null || _response$data$choice === void 0 ? void 0 : _response$data$choice[0].text);\n    console.log(text);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startListening,\n        disabled: isListening,\n        children: \"Start Listening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopListening,\n        disabled: !isListening,\n        children: \"Stop Listening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      id: \"inputText\",\n      onChange: handleInputChange,\n      placeholder: \"text\",\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n      id: \"outputText\",\n      placeholder: \"Password\",\n      value: note\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Header, \"weCl5ISTBpzAOomjuOfe9lZZrZQ=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","Configuration","OpenAIApi","require","TextArea","SpeechRecognition","window","webkitSpeechRecognition","mic","continuous","interimResults","lang","configuration","apiKey","openai","Header","_s","isListening","setIsListening","note","setNote","text","setText","startListening","start","stopListening","stop","handleInputChange","e","_response$data$choice","target","value","question","response","createCompletion","model","prompt","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","data","choices","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","id","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/mwitmacmini2/Desktop/WebOpenAi/frontend/src/component/Header.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Input } from 'antd';\nconst { Configuration, OpenAIApi } = require(\"openai\");\n\nconst { TextArea } = Input;\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst mic = new SpeechRecognition();\n\nmic.continuous = true;\nmic.interimResults = true;\nmic.lang = 'th-Th';\n\nconst configuration = new Configuration({\n    apiKey: \"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\",\n});\nconst openai = new OpenAIApi(configuration);\n\nconst Header = () => {\n    const [isListening, setIsListening] = useState(false);\n    const [note, setNote] = useState('');\n    const [text, setText] = useState('');\n\n    // useEffect(() => {\n    //     mic.onstart = () => {\n    //         console.log('Speech recognition started');\n    //     };\n\n    //     mic.onresult = event => {\n    //         const transcript = Array.from(event.results)\n    //             .map(result => result[0])\n    //             .map(result => result.transcript)\n    //             .join('');\n\n    //         setText(transcript);\n    //     };\n\n    //     mic.onerror = event => {\n    //         console.error('Speech recognition error:', event.error);\n    //     };\n    // }, []);\n\n    const startListening = () => {\n        setIsListening(true);\n        mic.start();\n    };\n\n    const stopListening = () => {\n        setIsListening(false);\n        mic.stop();\n    };\n\n    const handleInputChange = async e => {\n        setText(e.target.value);\n        const question = e.target.value;\n        const response = await openai.createCompletion({\n            model: \"text-davinci-003\",\n            prompt: `q: ${question}\\n a: `,\n            temperature: 0,\n            max_tokens: 100,\n            top_p: 1,\n            frequency_penalty: 0.0,\n            presence_penalty: 0.0,\n            stop: [\"\\n\"],\n        });\n        setNote(response.data.choices?.[0].text);\n        console.log(text)\n    };\n\n    return (\n        <>\n            <br /><br />\n            <div>\n                <button onClick={startListening} disabled={isListening}>\n                    Start Listening\n                </button>\n                <button onClick={stopListening} disabled={!isListening}>\n                    Stop Listening\n                </button>\n            </div>\n            <br /><br />\n            <Input type=\"text\" id=\"inputText\" onChange={handleInputChange} placeholder=\"text\" value={text} />\n            <br /><br />\n            <TextArea id=\"outputText\" placeholder=\"Password\" value={note} />\n        </>\n    );\n};\n\nexport default Header;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}